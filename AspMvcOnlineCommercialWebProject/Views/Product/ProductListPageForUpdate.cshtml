@model MvcOnlineCommercialAutomation.Models.Classes.Product
@{
    ViewBag.Title = "ProductListPageForUpdate";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<br />
<h2>Ürün Güncelleme Sayfası</h2>
<br />

@using (Html.BeginForm("ProductUpdate", "Product", FormMethod.Post))//Burası çalışınca id değerine göre seçilen ürünün özellikleri burada listelenir.
                                                                   //Ve kullanıcı burada update butonuna tıklayınca ProductUpdate controller'ına giderek güncelleme işlemini gerçekleştirir.
{
    //Benim burada hata almamam için Hidden for ile id'yi burada tutmam gerekir.
    @Html.HiddenFor(x => x.ProductID) <!--eğer bunu yazmazsam hata gönderir-->
    <label class="col-form-label">Ürün Adı</label>
    @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control" })
    <!--Burada x.ProductName veritabanındaki ve buradaki classdaki property adı olur.-->
    <br />
    <label class="col-form-label">Marka</label>
    @Html.TextBoxFor(x => x.Brand, new { @class = "form-control" })
    <br />
    <label class="col-form-label">Stok</label>
    @Html.TextBoxFor(x => x.Stock, new { @class = "form-control" })
    <br />
    <label class="col-form-label">Alış fiyatı</label>
    @Html.TextBoxFor(x => x.PurchasePrice, new { @class = "form-control" })
    <br />
    <label class="col-form-label">Satış Fiyatı</label>
    @Html.TextBoxFor(x => x.SalePrice, new { @class = "form-control" })
    <br />
    <label class="col-form-label">Kategori</label>
    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.a, new { @class = "form-control" })

    <br />
    <label class="col-form-label">Ürün Resmi</label>
    @Html.TextBoxFor(x => x.ProductImage, new { @class = "form-control" })
    <br />
    <label class="col-form-label">Durum</label>
    @Html.TextBoxFor(x => x.Durum, new { @class = "form-control" })
    <br />

    <button class="btn btn-warning">Güncelle</button>



}
